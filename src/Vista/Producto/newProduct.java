package Vista.Producto;

import Controlador.Ctrl_Categoria;
import Controlador.Ctrl_Productos;
import conexion.Conexion;
import dataContext.Messages;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.sql.*;
import javax.swing.JOptionPane;
import modelo.Categoria;
import modelo.Producto;

/**
 *
 * @author Administrator
 */
public class newProduct extends javax.swing.JInternalFrame {

    private int get_idCategoria = 0;
    Messages dataContext;

    public newProduct() {
        initComponents();
        this.setSize(new Dimension(600, 420));
        this.setTitle("NUEVO PRODUCTO");
       // this.showCategorias();
        this.CargarComboCategorias();
//        this.unShowlbValidation();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TITULO = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        NOMBRE = new javax.swing.JLabel();
        lbValidationName = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        CANTIDAD = new javax.swing.JLabel();
        lbValidationCantidad = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        GR = new javax.swing.JLabel();
        lbValidationGr = new javax.swing.JLabel();
        txtGr = new javax.swing.JTextField();
        PRECIO = new javax.swing.JLabel();
        lbValidationPrecio = new javax.swing.JLabel();
        txtPrecio = new javax.swing.JTextField();
        DESCRIPCION = new javax.swing.JLabel();
        lbValidationDescripcion = new javax.swing.JLabel();
        txtDescripcion = new javax.swing.JTextField();
        CATEGORIA = new javax.swing.JLabel();
        cbxCategoria = new javax.swing.JComboBox<>();
        IVA = new javax.swing.JLabel();
        cbxIva = new javax.swing.JComboBox<>();
        ESTADO = new javax.swing.JLabel();
        cbxEstado = new javax.swing.JComboBox<>();
        bnCancel = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jg_wallpaper = new javax.swing.JLabel();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TITULO.setBackground(new java.awt.Color(0, 0, 0));
        TITULO.setFont(new java.awt.Font("Microsoft New Tai Lue", 1, 36)); // NOI18N
        TITULO.setForeground(new java.awt.Color(255, 255, 255));
        TITULO.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TITULO.setText("NUEVO PRODUCTO");
        TITULO.setOpaque(true);
        getContentPane().add(TITULO, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 40));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        NOMBRE.setBackground(new java.awt.Color(255, 255, 255));
        NOMBRE.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        NOMBRE.setForeground(new java.awt.Color(0, 0, 0));
        NOMBRE.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        NOMBRE.setText("NOMBRE: ");
        NOMBRE.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        NOMBRE.setAlignmentY(0.0F);
        NOMBRE.setFocusable(false);
        NOMBRE.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jPanel1.add(NOMBRE, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 160, 35));

        lbValidationName.setBackground(new java.awt.Color(0, 0, 0));
        lbValidationName.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 10)); // NOI18N
        lbValidationName.setForeground(new java.awt.Color(255, 255, 153));
        lbValidationName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbValidationName.setText("INGRESE EL NOMBRE");
        lbValidationName.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.add(lbValidationName, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 10, 300, 35));

        txtNombre.setBackground(new java.awt.Color(0, 0, 0));
        txtNombre.setFont(new java.awt.Font("Engravers MT", 1, 14)); // NOI18N

        txtNombre.setForeground(new java.awt.Color(255, 255, 255));
        txtNombre.setMargin(new java.awt.Insets(10, 0, 0, 0));
        txtNombre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtNombreMouseClicked(evt);
            }
        });
        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });
        jPanel1.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 10, 300, 35));

        CANTIDAD.setBackground(new java.awt.Color(255, 255, 255));
        CANTIDAD.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        CANTIDAD.setForeground(new java.awt.Color(0, 0, 0));
        CANTIDAD.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        CANTIDAD.setText("CANTIDAD: ");
        CANTIDAD.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        CANTIDAD.setAlignmentY(0.0F);
        CANTIDAD.setFocusable(false);
        CANTIDAD.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jPanel1.add(CANTIDAD, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 55, 160, 35));

        lbValidationCantidad.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 10)); // NOI18N
        lbValidationCantidad.setForeground(new java.awt.Color(255, 255, 153));
        lbValidationCantidad.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbValidationCantidad.setText("INGRESE CANTIDAD");
        lbValidationCantidad.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.add(lbValidationCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 55, 150, 35));

        txtCantidad.setBackground(new java.awt.Color(0, 0, 0));
        txtCantidad.setFont(new java.awt.Font("Engravers MT", 1, 14)); // NOI18N
        txtCantidad.setForeground(new java.awt.Color(255, 255, 255));
        txtCantidad.setMargin(new java.awt.Insets(10, 0, 0, 0));
        txtCantidad.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtCantidadMouseClicked(evt);
            }
        });
        txtCantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCantidadActionPerformed(evt);
            }
        });
        jPanel1.add(txtCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 55, 150, 35));

        GR.setBackground(new java.awt.Color(102, 255, 255));
        GR.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        GR.setForeground(new java.awt.Color(0, 0, 0));
        GR.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        GR.setText("GR");
        GR.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        GR.setAlignmentY(0.0F);
        GR.setFocusable(false);
        GR.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jPanel1.add(GR, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 65, 40, -1));

        lbValidationGr.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 10)); // NOI18N
        lbValidationGr.setForeground(new java.awt.Color(255, 255, 153));
        lbValidationGr.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbValidationGr.setText("INGRESE GR.");
        lbValidationGr.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.add(lbValidationGr, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 65, 100, 25));

        txtGr.setBackground(new java.awt.Color(0, 0, 0));
        txtGr.setFont(new java.awt.Font("Engravers MT", 1, 14)); // NOI18N
        txtGr.setForeground(new java.awt.Color(255, 255, 255));
        txtGr.setMargin(new java.awt.Insets(10, 0, 0, 0));
        txtGr.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtGrMouseClicked(evt);
            }
        });
        txtGr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGrActionPerformed(evt);
            }
        });
        jPanel1.add(txtGr, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 65, 100, 25));

        PRECIO.setBackground(new java.awt.Color(255, 255, 204));
        PRECIO.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        PRECIO.setForeground(new java.awt.Color(0, 0, 0));
        PRECIO.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        PRECIO.setText("PRECIO: ");
        PRECIO.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        PRECIO.setAlignmentY(0.0F);
        PRECIO.setFocusable(false);
        PRECIO.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jPanel1.add(PRECIO, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 160, 35));

        lbValidationPrecio.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 10)); // NOI18N
        lbValidationPrecio.setForeground(new java.awt.Color(255, 255, 153));
        lbValidationPrecio.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbValidationPrecio.setText("INGRESE EL NOMBRE");
        lbValidationPrecio.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.add(lbValidationPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 100, 300, 35));

        txtPrecio.setBackground(new java.awt.Color(0, 0, 0));
        txtPrecio.setFont(new java.awt.Font("Engravers MT", 1, 14)); // NOI18N
        txtPrecio.setForeground(new java.awt.Color(255, 255, 255));
        txtPrecio.setMargin(new java.awt.Insets(10, 0, 0, 0));
        txtPrecio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtPrecioMouseClicked(evt);
            }
        });
        txtPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecioActionPerformed(evt);
            }
        });
        jPanel1.add(txtPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 100, 300, 35));

        DESCRIPCION.setBackground(new java.awt.Color(255, 255, 204));
        DESCRIPCION.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        DESCRIPCION.setForeground(new java.awt.Color(0, 0, 0));
        DESCRIPCION.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        DESCRIPCION.setText("DESCRIPCIÓN: ");
        DESCRIPCION.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        DESCRIPCION.setAlignmentY(0.0F);
        DESCRIPCION.setFocusable(false);
        DESCRIPCION.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jPanel1.add(DESCRIPCION, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 145, 160, 35));

        lbValidationDescripcion.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 10)); // NOI18N
        lbValidationDescripcion.setForeground(new java.awt.Color(255, 255, 153));
        lbValidationDescripcion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbValidationDescripcion.setText("INGRESE LA DESCRIPCION");
        lbValidationDescripcion.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.add(lbValidationDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 145, 300, 35));

        txtDescripcion.setBackground(new java.awt.Color(0, 0, 0));
        txtDescripcion.setFont(new java.awt.Font("Engravers MT", 1, 14)); // NOI18N
        txtDescripcion.setForeground(new java.awt.Color(255, 255, 255));
        txtDescripcion.setMargin(new java.awt.Insets(10, 0, 0, 0));
        txtDescripcion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtDescripcionMouseClicked(evt);
            }
        });
        txtDescripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescripcionActionPerformed(evt);
            }
        });
        jPanel1.add(txtDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 145, 300, 35));

        CATEGORIA.setBackground(new java.awt.Color(255, 255, 204));
        CATEGORIA.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        CATEGORIA.setForeground(new java.awt.Color(0, 0, 0));
        CATEGORIA.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        CATEGORIA.setText("CATEGORIA:");
        CATEGORIA.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        CATEGORIA.setAlignmentY(0.0F);
        CATEGORIA.setFocusable(false);
        CATEGORIA.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jPanel1.add(CATEGORIA, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 190, 160, 35));

        cbxCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxCategoriaActionPerformed(evt);
            }
        });
        jPanel1.add(cbxCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 190, 300, 35));

        IVA.setBackground(new java.awt.Color(255, 255, 204));
        IVA.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        IVA.setForeground(new java.awt.Color(0, 0, 0));
        IVA.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        IVA.setText("IVA:");
        IVA.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        IVA.setAlignmentY(0.0F);
        IVA.setFocusable(false);
        IVA.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jPanel1.add(IVA, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 235, 160, 35));

        cbxIva.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione IVA:", "12%", "I14%" }));
        cbxIva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxIvaActionPerformed(evt);
            }
        });
        jPanel1.add(cbxIva, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 245, 100, 30));

        ESTADO.setBackground(new java.awt.Color(255, 255, 204));
        ESTADO.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        ESTADO.setForeground(new java.awt.Color(0, 0, 0));
        ESTADO.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ESTADO.setText("ESTADO:");
        ESTADO.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        ESTADO.setAlignmentY(0.0F);
        ESTADO.setFocusable(false);
        ESTADO.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jPanel1.add(ESTADO, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 235, 90, 35));

        cbxEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxEstadoActionPerformed(evt);
            }
        });
        jPanel1.add(cbxEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 245, 80, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 60, 500, 280));

        bnCancel.setBackground(new java.awt.Color(245, 4, 4));
        bnCancel.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        bnCancel.setForeground(new java.awt.Color(255, 255, 255));
        bnCancel.setText("CANCELAR");
        bnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancel(evt);
            }
        });
        getContentPane().add(bnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 350, -1, 40));

        jButton3.setBackground(new java.awt.Color(51, 255, 51));
        jButton3.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("GUARDAR");
        jButton3.setFocusPainted(false);
        jButton3.setFocusable(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 350, -1, 40));

        jg_wallpaper.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/fondoForm400-600.jpg"))); // NOI18N
        jg_wallpaper.setOpaque(true);
        getContentPane().add(jg_wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 400));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void txtCantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCantidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCantidadActionPerformed

    private void txtGrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGrActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGrActionPerformed

    private void txtPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecioActionPerformed

    private void txtDescripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescripcionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescripcionActionPerformed

    private void btnSave(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave

        Producto producto = new Producto();
        Ctrl_Productos controlProducto = new Ctrl_Productos();
        String iva = "";
        String categoria = "";
        iva = cbxIva.getSelectedItem().toString().trim();
        categoria = cbxCategoria.getSelectedItem().toString().trim();

        //validar campos
        if (txtNombre.getText().equals("") || txtCantidad.getText().equals("") || txtPrecio.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Complete todos los campos");
            txtNombre.setBackground(Color.red);
            txtCantidad.setBackground(Color.red);
            txtPrecio.setBackground(Color.red);
        } else {
            //consulta para ver si el producto ya existe
            if (!controlProducto.comprobarExistente(txtNombre.getText().trim())) {
                if (iva.equalsIgnoreCase("Seleccione iva:")) {
                    JOptionPane.showMessageDialog(null, "Seleccione iva.");
                } else {
                    if (categoria.equalsIgnoreCase("Seleccione categoria:")) {
                        JOptionPane.showMessageDialog(null, "Seleccione categoria");
                    } else {
                        try {
                            producto.setIdProducto(0);
                            producto.setNombre(txtNombre.getText().trim());
                           // producto.setCantidad(txtCantidad.getText().trim());
                           producto.setCantidad(txtCantidad.getText().trim()); 
                           String precioTXT = "";
                            double Precio = 0.0;
                            precioTXT = txtPrecio.getText().trim();
                            boolean aux = false;
                            /*
                            *Si el usuario ingresa , (coma) como punto decimal,
                            lo transformamos a punto (.)
                             */
                            for (int i = 0; i < precioTXT.length(); i++) {
                                if (precioTXT.charAt(i) == ',') {
                                    String precioNuevo = precioTXT.replace(",", ".");
                                    Precio = Double.parseDouble(precioNuevo);
                                    aux = true;
                                }
                            }
                            //evaluar la condicion
                            if (aux == true) {
                                producto.setPrecio(Precio);
                            } else {
                                Precio = Double.parseDouble(precioTXT);
                                producto.setPrecio(Precio);
                            }

                            producto.setDescripcion(txtDescripcion.getText().trim());
                            //Porcentaje IVA
                            if (iva.equalsIgnoreCase("No grava iva")) {
                                producto.setPorcentajeIva(0);
                            } else if (iva.equalsIgnoreCase("12%")) {
                                producto.setPorcentajeIva(12);
                            } else if (iva.equalsIgnoreCase("14%")) {
                                producto.setPorcentajeIva(14);
                            }

                            //idcategoria - cargar metodo que obtiene el id de categoria
                            this.IdCategoria();
                            producto.setIdCategoria(get_idCategoria);
                            //producto.setEstado(1);
                            

                            if (controlProducto.guardarProducto(producto)) {
                                JOptionPane.showMessageDialog(null, "Registro Guardado");
                                txtNombre.setBackground(Color.green);
                                txtCantidad.setBackground(Color.green);
                                txtPrecio.setBackground(Color.green);
                                txtDescripcion.setBackground(Color.green);

                                this.CargarComboCategorias();
                                this.cbxIva.setSelectedItem("Seleccione iva:");
                                this.Limpiar();
                            } else {
                                JOptionPane.showMessageDialog(null, "Error al Guardar");
                            }

                        } catch (HeadlessException | NumberFormatException e) {
                            System.out.println("Error en: " + e);
                        }
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "El producto ya existe en la Base de Datos");
            }
        }
        
        
        //VALIDAR CAMPOS
//        Boolean nombre = txtNombre.getText().equals("");
//        Boolean cantidad = txtCantidad.getText().equals("");
//        Boolean gr = txtGr.getText().equals("");
//        Boolean precio = txtPrecio.getText().equals("");
//        Boolean descripcion = txtDescripcion.getText().equals("");
//        String ivaV = cbxIva.getSelectedItem().toString().trim();
       // String categoriaV = cbxCategoria.getSelectedItem().toString().trim();

//        if (nombre == true) {
//            txtNombre.setBackground(new java.awt.Color(255, 0, 0));
//            lbValidationName.setVisible(true);
//
//        } else {
//            txtNombre.setBackground(new java.awt.Color(18, 172, 10));
//            saveProduct();
//        }
//        if (cantidad == true) {
//            txtCantidad.setBackground(new java.awt.Color(255, 0, 0));
//            lbValidationCantidad.setVisible(true);
//        } else {
//            txtCantidad.setBackground(new java.awt.Color(18, 172, 10));
//            saveProduct();
//        }
//        if (gr == true) {
//            txtGr.setBackground(new java.awt.Color(255, 0, 0));
//            lbValidationGr.setVisible(true);
//        } else {
//            txtGr.setBackground(new java.awt.Color(18, 172, 10));
//            saveProduct();
//        }
//        if (precio == true) {
//            txtPrecio.setBackground(new java.awt.Color(255, 0, 0));
//            lbValidationPrecio.setVisible(true);
//
//        } else {
//            txtPrecio.setBackground(new java.awt.Color(18, 172, 10));
//            saveProduct();
//        }
//        if (descripcion == true) {
//            txtDescripcion.setBackground(new java.awt.Color(255, 0, 0));
//            lbValidationDescripcion.setVisible(true);
//        } else {
//            txtDescripcion.setBackground(new java.awt.Color(18, 172, 10));
//            saveProduct();
//        }

//        if (categoriaV.equalsIgnoreCase("SELECCIONE UNA CATEGORIA:")) {
//            cbxCategoria.setBackground(new java.awt.Color(255, 0, 0));
//        } else {
//            saveProduct();
//        }

//        if (txtNombre.getText().equals("")
//                || txtCantidad.getText().equals("")
//                || txtPrecio.getText().equals("")
//                || txtDescripcion.getText().equals("")
//                || categoria.equalsIgnoreCase("SELECCIONE UNA CATEGORIA:")
//                || iva.equalsIgnoreCase("Seleccione IVA:")) {
//            txtNombre.setBackground(Color.red);
//            txtCantidad.setBackground(Color.red);
//            txtDescripcion.setBackground(Color.red);
//            txtPrecio.setBackground(Color.red);
//            cbxCategoria.setBackground(Color.red);
//            cbxIva.setBackground(Color.red);
//
//            if (txtNombre.getText().length() > 1
//                    & txtCantidad.getText().length() > 1
//                    & txtPrecio.getText().length() > 1
//                    || txtDescripcion.getText().length() > 1) {
//                txtNombre.setBackground(Color.green);
//                txtCantidad.setBackground(Color.green);
//                txtDescripcion.setBackground(Color.green);
//                txtPrecio.setBackground(Color.green);
//            }
//        } else  {
//            
//            // if (!ctrl_Productos.comprobarExistente(txtNombre.getText().trim())) {
//
//            // if (categoria.equalsIgnoreCase("SELECCIONE UNA CATEGORIA:") || iva.equalsIgnoreCase("Seleccione IVA:")) {
//            //      cbxCategoria.setBackground(Color.red);
//            //     cbxIva.setBackground(Color.red);
//            //   } else {
//            //       cbxCategoria.setBackground(Color.yellow);
//            //      cbxIva.setBackground(Color.yellow);
//            //if (iva.equalsIgnoreCase("Seleccione IVA:")) {
//            //  } //else {
//            //  cbxIva.setBackground(Color.yellow);
//            // }
//        }
        //else {
        //dataContext.nameDuplicated();
        // }
        //   }
//        else {
//            if () {
//                if () {
//                    cbxCategoria.setBackground(Color.red);
//                } 
//
//            } else {
//                
//            }
//
//        }

    }//GEN-LAST:event_btnSave

    private void btnCancel(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancel
        this.dispose();
        
    }//GEN-LAST:event_btnCancel

    private void cbxIvaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxIvaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxIvaActionPerformed

    private void cbxEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxEstadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxEstadoActionPerformed

    private void cbxCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxCategoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxCategoriaActionPerformed

    private void txtNombreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtNombreMouseClicked
        lbValidationName.setVisible(false);
    }//GEN-LAST:event_txtNombreMouseClicked

    private void txtCantidadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCantidadMouseClicked
        lbValidationCantidad.setVisible(false);
    }//GEN-LAST:event_txtCantidadMouseClicked

    private void txtPrecioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPrecioMouseClicked
        lbValidationPrecio.setVisible(false);
    }//GEN-LAST:event_txtPrecioMouseClicked

    private void txtGrMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtGrMouseClicked
        lbValidationGr.setVisible(false);
    }//GEN-LAST:event_txtGrMouseClicked

    private void txtDescripcionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDescripcionMouseClicked
        lbValidationDescripcion.setVisible(false);
    }//GEN-LAST:event_txtDescripcionMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CANTIDAD;
    private javax.swing.JLabel CATEGORIA;
    private javax.swing.JLabel DESCRIPCION;
    private javax.swing.JLabel ESTADO;
    private javax.swing.JLabel GR;
    private javax.swing.JLabel IVA;
    private javax.swing.JLabel NOMBRE;
    private javax.swing.JLabel PRECIO;
    private javax.swing.JLabel TITULO;
    private javax.swing.JButton bnCancel;
    private javax.swing.JComboBox<String> cbxCategoria;
    private javax.swing.JComboBox<String> cbxEstado;
    private javax.swing.JComboBox<String> cbxIva;
    public javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel jg_wallpaper;
    private javax.swing.JLabel lbValidationCantidad;
    private javax.swing.JLabel lbValidationDescripcion;
    private javax.swing.JLabel lbValidationGr;
    private javax.swing.JLabel lbValidationName;
    private javax.swing.JLabel lbValidationPrecio;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtGr;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPrecio;
    // End of variables declaration//GEN-END:variables

    public void showCategorias() {
        Ctrl_Categoria ctrl_Categoria = new Ctrl_Categoria();

        String datad = ctrl_Categoria.showCategorias();

       // datad = ctrl_Categoria.showCategorias();
        JOptionPane.showMessageDialog(null, datad);
        cbxCategoria.removeAllItems();
        cbxCategoria.addItem("SELECCIONE UNA CATEGORIA:");

        cbxCategoria.addItem(datad);
        System.out.println("dtpos" + datad);

        // JOptionPane.showMessageDialog(null, "TUS DATOS SON " + datad);
        //String ctg = "EJEMPLO DE CATÑ";
        //Boolean comprobarExistente = ctrl_Categoria.comprobarExistente(ctg);
        //if (comprobarExistente == true) {
        //  comprobarExistente.equals(ctg);
        // JOptionPane.showMessageDialog(null, "SI EXISWTE LA CATEGORIA");
        //      }
        //  else {
        //  JOptionPane.showMessageDialog(null, "NO EXISTE LA CATEOPGRIA");
        // }
        // if (ctrl_Categoria.comprobarExistente()  ) {
        // if (ctrl_Categoria.guardarCategoria(categoria)) {
        //  JOptionPane.showMessageDialog(null, categoria.getDescripcion());
        // } else {
        //      JOptionPane.showMessageDialog(null, categoria.getDescripcion());
    }
    //  }
    //else {
    //      JOptionPane.showMessageDialog(null, categoria.getEstado());
    //  }
    //   Connection cn = Conexion.conectar();

//    private void unShowlbValidation() {
//        lbValidationName.setVisible(false);
//        lbValidationCantidad.setVisible(false);
//        lbValidationGr.setVisible(false);
//        lbValidationPrecio.setVisible(false);
//        lbValidationDescripcion.setVisible(false);
//    }

//    private void saveProduct() {
//        Producto producto = new Producto();
//        Ctrl_Productos ctrl_Productos = new Ctrl_Productos();
//        String iva = "";
//        String categoria = "";
//        iva = cbxIva.getSelectedItem().toString().trim();
//        categoria = cbxCategoria.getSelectedItem().toString().trim();
//
//        try {
//            producto.setNombre(txtPrecio.getText().trim());
//            producto.setCantidad(Integer.parseInt(txtCantidad.getText().trim()));
//            String precioTXT = "";
//            double Precio = 0.0;
//            precioTXT = txtPrecio.getText().trim();
//            boolean aux = false;
//            /*
//                            *Si el usuario ingresa , (coma) como punto decimal,
//                            lo transformamos a punto (.)
//             */
//            for (int i = 0; i < precioTXT.length(); i++) {
//                if (precioTXT.charAt(i) == ',') {
//                    String precioNuevo = precioTXT.replace(",", ".");
//                    Precio = Double.parseDouble(precioNuevo);
//                    aux = true;
//                }
//            }
//            //evaluar la condicion
//            if (aux == true) {
//                producto.setPrecio(Precio);
//            } else {
//                Precio = Double.parseDouble(precioTXT);
//                producto.setPrecio(Precio);
//            }
//
//            producto.setDescripcion(txtDescripcion.getText().trim());
//            //Porcentaje IVA
//            if (iva.equalsIgnoreCase("No grava iva")) {
//                producto.setPorcentajeIva(0);
//            } else if (iva.equalsIgnoreCase("12%")) {
//                producto.setPorcentajeIva(12);
//            } else if (iva.equalsIgnoreCase("14%")) {
//                producto.setPorcentajeIva(14);
//            }
//
//            //idcategoria - cargar metodo que obtiene el id de categoria
//            this.IdCategoria();
//            producto.setIdCategoria(get_idCategoria);
//            producto.setEstado(1);
//
//            if (ctrl_Productos.guardarProducto(producto)) {
//                JOptionPane.showMessageDialog(null, "Registro Guardado");
//                
//
//                this.CargarComboCategorias();
//                this.cbxIva.setSelectedItem("Seleccione iva:");
//               
//            } else {
//                JOptionPane.showMessageDialog(null, "Error al Guardar");
//            }
//
//        } catch (HeadlessException | NumberFormatException e) {
//            System.out.println("Error en: " + e);
//        }
//
////        try {
////
////            JOptionPane.showMessageDialog(null, "TODOS LÑOS DATOS ESTAN LLENSO");
////
////            producto.setNombre(txtNombre.getText().trim());
////            producto.setCantidad(Integer.parseInt(txtCantidad.getText().trim()));
////            String precioTXT = "";
////            double preecio = 0.0;
////            precioTXT = txtPrecio.getText().trim();
////            boolean aux = false;
////
////            for (int i = 0; i < precioTXT.length(); i++) {
////                if (precioTXT.charAt(i) == ',') {
////                    String precioNuevo = precioTXT.replace(",", ".");
////                    preecio = Double.parseDouble(precioNuevo);
////                    aux = true;
////
////                    JOptionPane.showMessageDialog(null, "SI TIENES COMA");
////                }
////
////                if (aux == true) {
////                } //else {}
////                else {
////                    JOptionPane.showMessageDialog(null, "NO TIENES COMA");
////                }
////            }
////        } catch (Exception e) {
////        }
//    }
    
    
    private void Limpiar() {
        txtNombre.setText("");
        txtCantidad.setText("");
        txtPrecio.setText("");
        txtDescripcion.setText("");

    }
    
    private void CargarComboCategorias() {
        Connection cn = Conexion.conectar();
        String sql = "select * from tb_categoria";
        Statement st;

        try {

            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            cbxCategoria.removeAllItems();
            cbxCategoria.addItem("Seleccione categoria:");
            while (rs.next()) {
                cbxCategoria.addItem(rs.getString("descripcion"));
            }
            cn.close();

        } catch (SQLException e) {
            System.out.println("Error al cargar categorias");
        }
    }
    
    private int IdCategoria() {
        String sql = "select * from tb_categoria where descripcion = '" + this.cbxCategoria.getSelectedItem() + "'";
        Statement st;
        try {
            Connection cn = Conexion.conectar();
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                get_idCategoria = rs.getInt("idCategoria");
            }
        } catch (SQLException e) {
            System.out.println("Error al obener id categoria");
        }
        return get_idCategoria;
    }

}
